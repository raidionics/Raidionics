name: Build Ubuntu

on:
  push:
    branches: [master, update]
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: Build packages
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    - name: Collect submodules
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Free Up GitHub Actions Ubuntu Runner Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        # This might remove tools that are actually needed, if set to "true" but frees about 6 GB
        tool-cache: false

        # All of these default to true, but feel free to set to "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    - name: Download ANTs
      uses: robinraju/release-downloader@main
      with:
        repository: "raidionics/Raidionics-dependencies"
        latest: true
        fileName: "ANTsX-v2.4.3_ubuntu.tar.gz"
        out-file-path: "downloads"

    - name: Extract ANTs
      run: |
        df -h
        cd ${{github.workspace}}/downloads/
        tar -xzf ANTsX-v2.4.3_ubuntu.tar.gz -C ${{github.workspace}}/downloads/
        mkdir ${{github.workspace}}/ANTs
        mv ${{github.workspace}}/downloads/install ${{github.workspace}}/ANTs/
        rm ANTsX-v2.4.3_ubuntu.tar.gz

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e git+https://github.com/dbouget/raidionics_rads_lib.git@update#egg=raidionicsrads
        pip install -r assets/requirements.txt

    - name: Build software
      run: |
        pip install pyinstaller
        mkdir tmp_dependencies
        pyinstaller --noconfirm --clean assets/main.spec

    - name: Make installer
      run: |
        mkdir -p assets/Raidionics_ubuntu/usr/local/bin
        cp -r dist/Raidionics assets/Raidionics_ubuntu/usr/local/bin
        dpkg-deb --build --root-owner-group assets/Raidionics_ubuntu
        ls -la
        cp -r assets/Raidionics_ubuntu.deb dist/Raidionics-1.2.1-ubuntu.deb

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: Package
        path: ${{github.workspace}}/dist/Raidionics-*
        if-no-files-found: error
